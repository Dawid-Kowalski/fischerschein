# Generated by Django 3.0.4 on 2020-03-31 11:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.IntegerField()),
                ('main_topic_ger', models.CharField(choices=[('fish structure', 'Fischkunde und -hege'), ('care of water', 'Pflege der Fischgewässer'), ('fishing equipment', 'Fanggeräte und deren Gebrauch'), ('handling of caught fish', 'Behandlung der gefangenen Fische'), ('relevant legislation', 'Einschlägige Rechtsvorschriften')], max_length=200)),
                ('main_topic_pl', models.CharField(choices=[('fish structure', 'budowa ryb'), ('care of water', 'dbanie o miejsca połowu'), ('fishing equipment', 'sprzęt wędkarski i jego użycie'), ('handling of caught fish', 'obchodzenie się ze złapaną rybą'), ('relevant legislation', 'odpowiadające przepisy')], max_length=200)),
                ('under_topic_ger', models.CharField(choices=[('function of the fish organs', 'Aufbau des Fischkörpers, Bau und Funktion der Fischorgane'), ('differentiation of native fish', 'Unterscheidung einheimischer Fischarten'), ('common fish diseases', 'häufig auftretende Fischkrankheiten'), ('need for restocking', 'Notwendigkeit von Besatzmaßnahme'), ('natural food, oxygen and temperature conditions', 'Naturnahrung, Sauerstoff und Temperaturverhältnisse'), ('others-fish structure', 'Sonstiges-Fischkunde und -hege'), ('fishing hydrology', 'Fischereiliche Gewässerkunde'), ('protection of water from pollutionh', 'Schutz der Gewässer vor Verunreinigung'), ('coast protection', 'Ufer und Gelegeschutz'), ('equipment for water maintenance', 'Mittel und Geräte zur Gewässerinstandhaltung'), ('others-care of water', 'Sonstiges-Pflege der Fischgewässer'), ('fishing equipment', 'Fanggeräte und deren Gebrauch'), ('stunning, killing and slaughtering fish', 'Betäuben, Töten und Schlachten von Fischen'), ('storage of fish', 'Aufbewahrung von Fischen'), ('animal welfare', 'Tierschutz'), ('Brandenburg State Fisheries Regulations', 'Fischereiordnung des Landes Brandenburg (BbgFischO)'), ('others-handling of caught fish', 'Sonstiges-Behandlung der gefangenen Fische'), ('state fishing law', 'Landesfischereirecht'), ('animal welfare law', 'Tierschutzrecht'), ('nature conservation law', 'Naturschutzrecht'), ('water law', 'Wasserrecht'), ('others-relevant legislation', 'Sonstiges-Einschlägige Rechtsvorschriften')], max_length=200)),
                ('under_topic_pl', models.CharField(choices=[('function of the fish organs', 'budowa organów u ryb'), ('differentiation of native fish', 'rozróżnianie rodzinych ryb'), ('common fish diseases', 'najczęstrze choroby u ryb'), ('need for restocking', 'zarybianie'), ('natural food, oxygen and temperature conditions', 'naturalne warunki życia, tlen i temperatura'), ('others-fish structure', 'pozostałe-budowa ryb'), ('fishing hydrology', 'hydrologia'), ('protection of water from pollutionh', 'ochrona wód przed zanieczyszczeniem'), ('coast protection', 'ochrona brzegów i łowisk'), ('equipment for water maintenance', 'środki i sprzęt do utrzynania łowisk w dobrym stanie'), ('others-care of water', 'pozostałe-dbanie o miejsca połowu'), ('fishing equipment', 'sprzęt wędkarski i jego użycie'), ('stunning, killing and slaughtering fish', 'ogłuszanie, uśmiercanie i szlachtowanie ryb'), ('storage of fish', 'przechowywanie ryb'), ('animal welfare', 'ochrona zwierząt'), ('Brandenburg State Fisheries Regulations', 'prawo dot. wędkarstwa w Brandenburgii'), ('others-handling of caught fish', 'pozostałe-obchodzenie się ze złapaną rybą'), ('state fishing law', 'prawo połowu'), ('animal welfare law', 'prawo dot. ochrony zwierząt'), ('nature conservation law', 'prawo dot. ochrony przyrody'), ('water law', 'prawo wodne'), ('others-relevant legislation', 'pozostałe-odpowiadające przepisy')], max_length=200)),
                ('question_ger', models.TextField(max_length=400)),
                ('question_pl', models.TextField(max_length=400)),
                ('answer_a_ger', models.TextField(max_length=400)),
                ('answer_a_pl', models.TextField(max_length=400)),
                ('answer_b_ger', models.TextField(max_length=400)),
                ('answer_b_pl', models.TextField(max_length=400)),
                ('answer_c_ger', models.TextField(max_length=400)),
                ('answer_c_pl', models.TextField(max_length=400)),
                ('correct_answer_ger', models.TextField(max_length=400)),
                ('correct_answer_pl', models.TextField(max_length=400)),
            ],
            options={
                'ordering': ('question_id',),
            },
        ),
    ]
